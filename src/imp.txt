class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
        int n = intervals.size();
        int index = -1;
        for(int i = 0;i<n;i++)
        {
            if(intervals[i][0] <= newInterval[0] && intervals[i][1] >= newInterval[0])
            {
              index = i;
                break;
            }
        }
        int index1 = -1;
        int i = index;
        while(i < n)
        {
            cout<<i<<endl;
            if(newInterval[1] <= intervals[i][1] && newInterval[1] >= intervals[i][0] )
            {
                index1 = i;
                break;
            }
            i++;
        }
        cout<<index<<" "<<index1<<endl;
        if(index == -1)
        {
            intervals.push_back(newInterval);
            return(intervals);
        }
        vector<vector<int>>ans;
        if(index1 == -1)
        {
            for(int i = 0;i<index;i++)
            {
                ans.push_back(intervals[i]);
            }
            ans.push_back({intervals[index][0],newInterval[1]});
            if(index < n)
            {
                for(int i = index+1;i<n;i++)
                {
                    ans.push_back(intervals[i]);
                }
            }
            return(ans);
        }
        for(int i = 0;i<index;i++)
        {
            ans.push_back(intervals[i]);
        }
        ans.push_back({intervals[index][0],intervals[index1][1]});
        for(int i = index1+1;i<n;i++){
            ans.push_back(intervals[i]);
        }
        return(ans);
        
        
        return(intervals);
    }
};